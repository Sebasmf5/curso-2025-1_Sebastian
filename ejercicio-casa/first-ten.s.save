.data
mensaje: .asciz "%ld, "

.text
.global main
.extern printf # Indica que quiero utilizar la funcion printf de libc

main:

        subq $8, %rsp #Alineacion de datos
	movq %0, %rbx #inicializar 1 en el registro rbx

inicio_bucle:
        # Bloque de impresion
        # printf("ld \n", rax)
        #           rdi , rsi
        movq $mensaje, %rdi
        movq %rbx, %rsi
	inq %rbx #incrementar rbx++
        xorq %rax, %rax
	movq %1, %rax
        call printf

	CMP %rbx, 10
	JNZ inicio_bucle
	JZ salir

salir:

        addq $8, %rsp #Alineacion de datos

        # Salir al sistema
        mov $60, %rax # Indico que vamos a usar la funcion sys_exit
        mov $0, %rdi  # Indico que el argumento tiene un valor de 0
        syscall       # No es parte de ensamblador pero llama a las funciones>

